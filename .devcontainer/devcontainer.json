// .devcontainer/devcontainer.json
{
  "name": "Full Stack Monitoring Project",
  "dockerComposeFile": [
    "../docker-compose.yml",
    "docker-compose.override.yml"
  ],
  "service": "devcontainer",
  "workspaceFolder": "/workspace",
  
  // Shutdown action
  "shutdownAction": "stopCompose",
  
  // Custom service for development
  "overrideCommand": false,
  
  // VS Code customizations
  "customizations": {
    "vscode": {
      "extensions": [
        // Frontend Development
        "angular.ng-template",
        "ms-vscode.vscode-typescript-next",
        "ms-typescript.typescript-importer",
        "johnpapa.angular2",
        "bradlc.vscode-tailwindcss",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-eslint",
        "ms-vscode.vscode-css-peek",
        "formulahendry.auto-rename-tag",
        
        // Backend Development
        "ms-python.python",
        "ms-python.autopep8",
        "ms-python.pylint",
        "ms-python.black-formatter",
        "ms-python.isort",
        "batisteo.vscode-django",
        "ms-python.flake8",
        
        // Database & Oracle
        "mtxr.sqltools",
        "mtxr.sqltools-driver-pg",
        "oracle.oracledevtools",
        
        // Docker & DevOps
        "ms-azuretools.vscode-docker",
        "ms-vscode-remote.remote-containers",
        
        // API Development & Testing
        "humao.rest-client",
        "ms-vscode.vscode-thunder-client",
        
        // General Development
        "eamodio.gitlens",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-json",
        "ms-vscode.hexdump",
        "streetsidesoftware.code-spell-checker",
        "ms-vscode.live-server",
        "errorlens.vscode-error-lens"
      ],
      
      "settings": {
        // Multi-root workspace settings
        "workbench.startupEditor": "none",
        "explorer.sortOrder": "foldersNestsFiles",
        
        // Frontend (Angular/TypeScript) settings
        "typescript.updateImportsOnFileMove.enabled": "always",
        "typescript.preferences.quoteStyle": "single",
        "angular.experimental-ivy": true,
        "emmet.includeLanguages": {
          "typescript": "html"
        },
        
        // Backend (Python/Django) settings
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.terminal.activateEnvironment": false,
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.linting.flake8Enabled": true,
        "python.autoComplete.extraPaths": ["/workspace/backend"],
        
        // Editor settings
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": "explicit",
          "source.organizeImports": "explicit"
        },
        "editor.rulers": [80, 120],
        "editor.tabSize": 2,
        "editor.insertSpaces": true,
        
        // File associations
        "files.associations": {
          "*.py": "python",
          "*.html": "html",
          "*.ts": "typescript",
          "*.js": "javascript",
          "*.json": "json",
          "*.yml": "yaml",
          "*.yaml": "yaml"
        },
        
        // Terminal settings
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.cwd": "/workspace",
        
        // Auto-save
        "files.autoSave": "afterDelay",
        "files.autoSaveDelay": 1000,
        "files.trimTrailingWhitespace": true,
        
        // Search settings
        "search.exclude": {
          "**/node_modules": true,
          "**/bower_components": true,
          "**/.git": true,
          "**/postgres_data": true,
          "**/__pycache__": true,
          "**/*.pyc": true
        }
      }
    }
  },
  
  // Port forwarding
  "forwardPorts": [
    4200,  // Angular dev server
    8000,  // Django backend
    5433,  // PostgreSQL
    6379,  // Redis
    9092,  // Kafka
    2181,  // Zookeeper
    8080,  // Kafka UI
    1521   // Oracle
  ],
  
  "portsAttributes": {
    "4200": {
      "label": "Angular Frontend",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "Django Backend API",
      "onAutoForward": "notify"
    },
    "5433": {
      "label": "PostgreSQL Database",
      "onAutoForward": "silent"
    },
    "8080": {
      "label": "Kafka UI",
      "onAutoForward": "silent"
    },
    "1521": {
      "label": "Oracle Database",
      "onAutoForward": "silent"
    }
  },
  
  // Features to install
  "features": {
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "14"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11"
    }
  },
  
  // Mount Docker socket for Docker commands
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],
  
  // Environment variables
  "containerEnv": {
    "WORKSPACE_ROOT": "/workspace",
    "FRONTEND_PATH": "/workspace/frontend",
    "BACKEND_PATH": "/workspace/backend"
  },
  
  // Post-create command to set up the workspace
  "postCreateCommand": "bash /workspace/.devcontainer/setup.sh",
  
  // User remapping
  "remoteUser": "vscode"
}