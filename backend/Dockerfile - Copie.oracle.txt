# backend/Dockerfile.oracle

FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive

# Fix repository sources
RUN echo 'deb http://deb.debian.org/debian bookworm main' > /etc/apt/sources.list && \
    echo 'deb http://deb.debian.org/debian bookworm-updates main' >> /etc/apt/sources.list

# Install system dependencies including Oracle requirements
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    curl \
    wget \
    unzip \
    libaio1 \
    postgresql-client \
    cron \
    libpq-dev \
    supervisor \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -r app_group && useradd -r -g app_group -m -d /home/app_user -s /sbin/nologin app_user

# Install Oracle Instant Client
WORKDIR /tmp
RUN wget https://download.oracle.com/otn_software/linux/instantclient/211000/instantclient-basic-linux.x64-21.1.0.0.0.zip && \
    wget https://download.oracle.com/otn_software/linux/instantclient/211000/instantclient-sdk-linux.x64-21.1.0.0.0.zip && \
    unzip instantclient-basic-linux.x64-21.1.0.0.0.zip && \
    unzip instantclient-sdk-linux.x64-21.1.0.0.0.zip && \
    mkdir -p /opt/oracle && \
    mv instantclient_21_1 /opt/oracle/ && \
    rm -f instantclient-*.zip

# Set Oracle environment variables
ENV LD_LIBRARY_PATH=/opt/oracle/instantclient_21_1:$LD_LIBRARY_PATH
ENV TNS_ADMIN=/opt/oracle/instantclient_21_1/network/admin

# Create TNS_ADMIN directory
RUN mkdir -p /opt/oracle/instantclient_21_1/network/admin

# Set working directory
WORKDIR /app

# Copy requirements file first for better caching
COPY requirements.txt .

# Upgrade pip first
RUN python -m pip install --no-cache-dir --upgrade pip

# Install Python dependencies (including cx_Oracle)
RUN python -m pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code
COPY . .

# Copy supervisord configuration
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Create supervisor log directory
RUN mkdir -p /var/log/supervisor && chown -R app_user:app_group /var/log/supervisor

# Change ownership of the app directory
RUN chown -R app_user:app_group /app

# Expose the application port
EXPOSE 8000

# Run supervisord
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]