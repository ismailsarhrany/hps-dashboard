# Generated by Django 5.2 on 2025-07-14 13:46

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hostname', models.CharField(max_length=255, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('alias', models.CharField(blank=True, help_text='Friendly name for the server', max_length=100, null=True)),
                ('os_type', models.CharField(choices=[('aix', 'AIX'), ('linux', 'Linux'), ('solaris', 'Solaris'), ('windows', 'Windows')], max_length=20)),
                ('os_version', models.CharField(blank=True, max_length=100, null=True)),
                ('architecture', models.CharField(blank=True, max_length=20, null=True)),
                ('ssh_port', models.IntegerField(default=22, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)])),
                ('ssh_username', models.CharField(max_length=50)),
                ('ssh_key_path', models.CharField(blank=True, help_text='Path to SSH private key', max_length=500, null=True)),
                ('ssh_password', models.CharField(blank=True, help_text='SSH password (if not using key)', max_length=255, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Maintenance'), ('error', 'Error')], default='active', max_length=20)),
                ('monitoring_enabled', models.BooleanField(default=True)),
                ('monitoring_interval', models.IntegerField(default=60, help_text='Monitoring interval in seconds')),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('environment', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'servers',
                'ordering': ['hostname'],
                'indexes': [models.Index(fields=['hostname'], name='servers_hostnam_416e76_idx'), models.Index(fields=['ip_address'], name='servers_ip_addr_438256_idx'), models.Index(fields=['os_type'], name='servers_os_type_64d07d_idx'), models.Index(fields=['status'], name='servers_status_3f93ed_idx'), models.Index(fields=['monitoring_enabled'], name='servers_monitor_7a183b_idx')],
            },
        ),
        migrations.CreateModel(
            name='ServerGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('servers', models.ManyToManyField(blank=True, related_name='groups', to='metrics.server')),
            ],
            options={
                'db_table': 'server_groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProcessMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('pid', models.IntegerField(help_text='Process ID')),
                ('user', models.CharField(help_text='Process owner', max_length=50)),
                ('cpu', models.FloatField(help_text='CPU usage percentage')),
                ('mem', models.FloatField(help_text='Memory usage percentage')),
                ('command', models.CharField(help_text='Command line', max_length=500)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_metrics', to='metrics.server')),
            ],
            options={
                'db_table': 'process_metrics',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['server', 'timestamp'], name='process_met_server__790819_idx'), models.Index(fields=['timestamp', 'pid'], name='process_met_timesta_502c6b_idx'), models.Index(fields=['pid', 'timestamp'], name='process_met_pid_73984d_idx')],
            },
        ),
        migrations.CreateModel(
            name='NetstatMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('interface', models.CharField(help_text='Network interface name', max_length=50)),
                ('ipkts', models.BigIntegerField(help_text='Input packets')),
                ('ierrs', models.BigIntegerField(help_text='Input errors')),
                ('ipkts_rate', models.FloatField(blank=True, help_text='Input packets per second', null=True)),
                ('ierrs_rate', models.FloatField(blank=True, help_text='Input errors per second', null=True)),
                ('opkts', models.BigIntegerField(help_text='Output packets')),
                ('opkts_rate', models.FloatField(blank=True, help_text='Output packets per second', null=True)),
                ('oerrs', models.BigIntegerField(help_text='Output errors')),
                ('oerrs_rate', models.FloatField(blank=True, help_text='Output errors per second', null=True)),
                ('time', models.BigIntegerField(help_text='Timestamp')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='netstat_metrics', to='metrics.server')),
            ],
            options={
                'db_table': 'netstat_metrics',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['server', 'timestamp'], name='netstat_met_server__3758df_idx'), models.Index(fields=['timestamp'], name='netstat_met_timesta_0b00c4_idx'), models.Index(fields=['interface'], name='netstat_met_interfa_ac3898_idx')],
            },
        ),
        migrations.CreateModel(
            name='MonitoringSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('running', 'Running'), ('stopped', 'Stopped'), ('error', 'Error')], default='running', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('metrics_collected', models.IntegerField(default=0)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_sessions', to='metrics.server')),
            ],
            options={
                'db_table': 'monitoring_sessions',
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['server', 'started_at'], name='monitoring__server__c8ada7_idx'), models.Index(fields=['status'], name='monitoring__status_deec91_idx')],
            },
        ),
        migrations.CreateModel(
            name='MetricAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('metric_type', models.CharField(choices=[('cpu', 'CPU Usage'), ('memory', 'Memory Usage'), ('disk_io', 'Disk I/O'), ('network', 'Network'), ('process', 'Process')], max_length=20)),
                ('threshold', models.FloatField()),
                ('severity', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('critical', 'Critical')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='metrics.server')),
            ],
            options={
                'db_table': 'metric_alerts',
                'indexes': [models.Index(fields=['server', 'is_active'], name='metric_aler_server__280f92_idx'), models.Index(fields=['metric_type'], name='metric_aler_metric__d42d3c_idx')],
                'unique_together': {('server', 'name')},
            },
        ),
        migrations.CreateModel(
            name='IostatMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('disk', models.CharField(help_text='Disk device name', max_length=50)),
                ('tps', models.FloatField(help_text='Transactions per second')),
                ('kb_read', models.FloatField(help_text='KB read per second')),
                ('kb_wrtn', models.FloatField(help_text='KB written per second')),
                ('service_time', models.FloatField(help_text='Average service time in milliseconds')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iostat_metrics', to='metrics.server')),
            ],
            options={
                'db_table': 'iostat_metrics',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['server', 'timestamp'], name='iostat_metr_server__b6afac_idx'), models.Index(fields=['timestamp'], name='iostat_metr_timesta_43406a_idx'), models.Index(fields=['disk'], name='iostat_metr_disk_61f68a_idx')],
            },
        ),
        migrations.CreateModel(
            name='VmstatMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('r', models.IntegerField(help_text='Runnable processes')),
                ('b', models.IntegerField(help_text='Blocked processes')),
                ('avm', models.BigIntegerField(help_text='Active virtual memory')),
                ('fre', models.BigIntegerField(help_text='Free memory')),
                ('pi', models.IntegerField(help_text='Pages paged in')),
                ('po', models.IntegerField(help_text='Pages paged out')),
                ('fr', models.IntegerField(help_text='Pages freed')),
                ('interface_in', models.IntegerField(db_column='in', help_text='Interrupts')),
                ('cs', models.IntegerField(help_text='Context switches')),
                ('us', models.FloatField(help_text='User time')),
                ('sy', models.FloatField(help_text='System time')),
                ('idle', models.FloatField(help_text='Idle time')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vmstat_metrics', to='metrics.server')),
            ],
            options={
                'db_table': 'vmstat_metrics',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['server', 'timestamp'], name='vmstat_metr_server__178dad_idx'), models.Index(fields=['timestamp'], name='vmstat_metr_timesta_13f848_idx')],
            },
        ),
    ]
