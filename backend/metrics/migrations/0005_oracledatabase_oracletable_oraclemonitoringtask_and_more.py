# Generated by Django 5.2 on 2025-07-25 15:24

import django.db.models.deletion
import encrypted_model_fields.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('metrics', '0004_alter_netstatmetric_time'),
    ]

    operations = [
        migrations.CreateModel(
            name='OracleDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Database identifier name', max_length=100)),
                ('host', models.GenericIPAddressField(help_text='Oracle DB host (can be same as server or different)')),
                ('port', models.IntegerField(default=1521)),
                ('service_name', models.CharField(help_text='Oracle service name or SID', max_length=100)),
                ('username', models.CharField(max_length=100)),
                ('password', encrypted_model_fields.fields.EncryptedCharField()),
                ('connection_timeout', models.IntegerField(default=30, help_text='Connection timeout in seconds')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_connection_test', models.DateTimeField(blank=True, null=True)),
                ('connection_status', models.CharField(choices=[('unknown', 'Unknown'), ('connected', 'Connected'), ('failed', 'Failed'), ('timeout', 'Timeout')], default='unknown', max_length=20)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oracle_databases', to='metrics.server')),
            ],
            options={
                'unique_together': {('server', 'name')},
            },
        ),
        migrations.CreateModel(
            name='OracleTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=100)),
                ('schema_name', models.CharField(default='PUBLIC', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('polling_interval', models.IntegerField(default=30, help_text='Polling interval in seconds')),
                ('columns_to_monitor', models.JSONField(blank=True, default=list, help_text='List of specific columns to monitor. Empty means all columns')),
                ('where_clause', models.TextField(blank=True, help_text='Optional WHERE clause for filtering data')),
                ('order_by', models.CharField(blank=True, help_text='ORDER BY clause for consistent data retrieval', max_length=200)),
                ('timestamp_column', models.CharField(blank=True, help_text='Column to use for detecting changes (timestamp/date column)', max_length=100)),
                ('primary_key_columns', models.JSONField(default=list, help_text='List of primary key columns for change detection')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_poll_time', models.DateTimeField(blank=True, null=True)),
                ('last_record_count', models.IntegerField(default=0)),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitored_tables', to='metrics.oracledatabase')),
            ],
            options={
                'unique_together': {('database', 'table_name', 'schema_name')},
            },
        ),
        migrations.CreateModel(
            name='OracleMonitoringTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, help_text='Task duration in seconds', null=True)),
                ('records_processed', models.IntegerField(default=0)),
                ('changes_detected', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_tasks', to='metrics.oracletable')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OracleTableData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(help_text='JSON representation of the table data')),
                ('record_count', models.IntegerField()),
                ('checksum', models.CharField(help_text='MD5 checksum of data for change detection', max_length=64)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('collection_duration', models.FloatField(help_text='Time taken to collect data in seconds')),
                ('errors', models.JSONField(blank=True, default=dict, help_text='Any errors encountered during collection')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_snapshots', to='metrics.oracletable')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['table', '-timestamp'], name='metrics_ora_table_i_5df2e9_idx'), models.Index(fields=['checksum'], name='metrics_ora_checksu_7172f3_idx')],
            },
        ),
    ]
